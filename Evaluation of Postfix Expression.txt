Evaluation of Postfix Expression

GFG
Example 1:

Input: S = "231*+9-"
Output: -4
Explanation:
After solving the given expression, 
we have -4 as result.
Example 2:

Input: S = "123+*8-"
Output: -3
Explanation:
After solving the given postfix 
expression, we have -3
---------------------------------------
Expected Time Complexity: O(|S|)
Expected Auixilliary Space: O(|S|)



class Solution
{
    //Function to evaluate a postfix expression.
    public static int evaluatePostFix(String S)
    {
        // Your code here
        
        Stack<Integer> val=new Stack<>();
        for(int i=0;i<S.length();i++)
        {
            char ch=S.charAt(i);
            int ascii=(int)ch;
            if(ascii>=48 && ascii<=57)
            {
                val.push(ascii-48);
            }
            else if(ch=='+')
            {
                int v2=val.pop();
                int v1=val.pop();
                int res=v1+v2;
                val.push(res);
            }
             else if(ch=='-')
            {
                int v2=val.pop();
                int v1=val.pop();
                int res=v1-v2;
                val.push(res);
            }
             else if(ch=='*')
            {
                int v2=val.pop();
                int v1=val.pop();
                int res=v1*v2;
                val.push(res);
            }
             else if(ch=='/')
            {
                int v2=val.pop();
                int v1=val.pop();
                int res=v1/v2;
                val.push(res);
            }
            
        }
        return val.pop();
    }
}
------------------------------------------------------------------------------------------------------------------
LEETCODE

Example 1:

Input: tokens = ["2","1","+","3","*"]
Output: 9
Explanation: ((2 + 1) * 3) = 9
Example 2:

Input: tokens = ["4","13","5","/","+"]
Output: 6
Explanation: (4 + (13 / 5)) = 6
Example 3:

Input: tokens = ["10","6","9","3","+","-11","*","/","*","17","+","5","+"]
Output: 22
Explanation: ((10 * (6 / ((9 + 3) * -11))) + 17) + 5
= ((10 * (6 / (12 * -11))) + 17) + 5
= ((10 * (6 / -132)) + 17) + 5
= ((10 * 0) + 17) + 5
= (0 + 17) + 5
= 17 + 5
= 22

Expected Time Complexity: O(|S|)
Expected Auixilliary Space: O(|S|)


class Solution {
    public int evalRPN(String[] tokens) {
        Stack<Integer> val=new Stack<>();
        for(int i=0;i<tokens.length;i++)
        {
         String str=tokens[i];
           if(str.equals("+"))        
           {
              int v2=val.pop();
              int v1=val.pop();            
               val.push(v1+v2);

           }
             else if(str.equals("-"))
             {
              int v2=val.pop();
              int v1=val.pop();
              val.push( v1-v2);
             } 
            else if(str.equals("*"))
            {
              int v2=val.pop();
              int v1=val.pop();
              val.push(v1*v2);
            }
             else if(str.equals("/"))
             { 
              int v2=val.pop();
              int v1=val.pop();
              val.push(v1/v2);
             }
          
          else
          {
            int value=(Integer.parseInt(str));      
             val.push(value);
          }
        } 
        return val.pop();
    }
}